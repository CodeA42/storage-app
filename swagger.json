{"openapi":"3.0.0","paths":{"/api/user/{userId}":{"get":{"operationId":"UserController_getUser","parameters":[{"name":"userId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"Returns user data without password","content":{"application/json":{"schema":{"example":{"id":"d72d96b9-34aa-456d-8289-cc135b1db8ac","username":"mark","email":"oh@hi.com","avatar":"9dc85a45-3fc3-4f0f-ae0e-9883b2156e7c.jpeg"}}}}},"400":{"description":"User ID was was not in the correct format","content":{"application/json":{"schema":{"example":{"statusCode":400,"message":"Validation failed (uuid  is expected)","error":"Bad Request"}}}}},"401":{"description":"Returned when the access token is invalid or the user has insufficient rights.","content":{"application/json":{"schema":{"type":"ExceptionDto","example":{"statusCode":401,"message":"Unauthorized"}}}}},"404":{"description":"User not found","content":{"application/json":{"schema":{"example":{"statusCode":404,"message":"User not found"}}}}},"500":{"description":"Any oher error will throw the following.","content":{"application/json":{"schema":{"example":{"statusCode":500,"message":"Internal Server Error"}}}}}},"tags":["User"],"security":[{"accessToken":[]}]}},"/api/user/change-password":{"post":{"operationId":"UserController_changePassword","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NewPasswordDto"}}}},"responses":{"200":{"description":"Password changed successfully"},"401":{"description":"Returned when the access token is invalid or the user has insufficient rights.","content":{"application/json":{"schema":{"type":"ExceptionDto","example":{"statusCode":401,"message":"Unauthorized"}}}}},"403":{"description":"Wrong password"},"500":{"description":"Any oher error will throw the following.","content":{"application/json":{"schema":{"example":{"statusCode":500,"message":"Internal Server Error"}}}}}},"tags":["User"],"security":[{"accessToken":[]},{"accessToken":[]}]}},"/api/register":{"post":{"operationId":"AuthenticationController_register","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserAuthDto"}}}},"responses":{"201":{"description":"User was created sucessfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserIdResponseDto"}}}},"400":{"description":"Validation error","content":{"application/json":{"schema":{"example":{"statusCode":400,"message":["Password must be 8 characters long contain at least one letter and number."],"error":"Bad request"}}}}},"409":{"description":"When either the email or username exists","content":{"application/json":{"schema":{"type":"ExceptionDto","example":{"statusCode":409,"message":"Email exists"}}}}},"500":{"description":"Any oher error will throw the following.","content":{"application/json":{"schema":{"example":{"statusCode":500,"message":"Internal Server Error"}}}}}},"tags":["Authentication"]}},"/api/login":{"post":{"operationId":"AuthenticationController_login","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginAuthDto"}}}},"responses":{"201":{"description":"Login was successfull. Access and Refresh tokens are sent via json for the access and cookie for the refresh.","headers":{"Set-Cookie":{"schema":{"type":"String","description":"The refresh token needed to get new access tokens","example":"refreshToken={Refresh token goes here}; Path=/; HttpOnly"},"description":"The refresh token needed to get new access tokens"}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessTokenResponseDto"}}}},"400":{"description":"Validation error","content":{"application/json":{"schema":{"example":{"statusCode":400,"message":["password must not be empty"]}}}}},"403":{"description":"When username, email or password are wrong","content":{"application/json":{"schema":{"type":"ExceptionDto","example":{"statusCode":403,"message":"Wrong credentials"}}}}},"500":{"description":"Any oher error will throw the following.","content":{"application/json":{"schema":{"example":{"statusCode":500,"message":"Internal Server Error"}}}}}},"tags":["Authentication"]}},"/api/refresh":{"get":{"operationId":"AuthenticationController_refresh","parameters":[],"responses":{"201":{"description":"Returned when the refreshToken has valid signature and hasn't expired.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessTokenResponseDto"}}}},"400":{"description":"Despite valid token signature the user data is invalid","content":{"application/json":{"schema":{"example":{"statusCode":400,"message":["username must not be empty"],"error":"Bad Request"}}}}},"401":{"description":"Returned when the refresh token has either invalid signature or when it has expired or when there is no refreshToken cookie.","content":{"application/json":{"schema":{"type":"ExceptionDto","example":{"statusCode":401,"message":"Session expired"}}}}},"500":{"description":"Any oher error will throw the following.","content":{"application/json":{"schema":{"example":{"statusCode":500,"message":"Internal Server Error"}}}}}},"tags":["Authentication"],"security":[{"refreshToken":[]}]}},"/api/logout":{"get":{"operationId":"AuthenticationController_logout","parameters":[],"responses":{"200":{"description":"User logged out successfully"},"401":{"description":"The refresh token is invalid.","content":{"application/json":{"schema":{"type":"ExceptionDto","example":{"statusCode":401,"message":"Session expired"}}}}},"500":{"description":"Any oher error will throw the following.","content":{"application/json":{"schema":{"example":{"statusCode":500,"message":"Internal Server Error"}}}}}},"tags":["Authentication"],"security":[{"refreshToken":[]}]}},"/api/logout-all":{"get":{"operationId":"AuthenticationController_logoutAll","parameters":[],"responses":{"200":{"description":"Logged out from all devices"},"401":{"description":"The refresh token is invalisd","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExceptionDto"}}}},"500":{"description":"Any oher error will throw the following.","content":{"application/json":{"schema":{"example":{"statusCode":500,"message":"Internal Server Error"}}}}}},"tags":["Authentication"],"security":[{"refreshToken":[]}]}}},"info":{"title":"Rent-a-car API","description":"Coursework Aleksandar Velichkov F.N. 1901321002","version":"1.0.0","contact":{}},"tags":[],"servers":[{"url":"http://localhost:3456"}],"components":{"securitySchemes":{"refreshToken":{"type":"apiKey","in":"Cookie","name":"refreshToken","description":"Session key to regenerate access keys.","scheme":"String"},"accessToken":{"scheme":"bearer","bearerFormat":"Bearer ${accessToken}","type":"apiKey","description":"Session access key to identify user session.","name":"accessToken","in":"Authorization Header"}},"schemas":{"NewPasswordDto":{"type":"object","properties":{}},"UserAuthDto":{"type":"object","properties":{"username":{"type":"string","example":"mark","description":"Username should be unique"},"password":{"type":"string","description":"Minimum allowed password length is 8 characters. The password must contain at least one number and letter. Special characters allowed. The regex /^(?=.*[A-Za-z])(?=.*\\d)[a-zA-Z\\d\\w\\W]{8,}$/","example":"ohhimark123"},"email":{"type":"string","example":"oh@hi.com","description":"Email should be unique"}},"required":["username","password","email"]},"UserIdResponseDto":{"type":"object","properties":{"id":{"type":"string","example":"f22d973f-7804-41f5-99d3-b6982a6df8a2","description":"Id of the newly created user"}},"required":["id"]},"LoginAuthDto":{"type":"object","properties":{"username":{"type":"string","example":"mark","description":"Username is not needed as long as there is email"},"password":{"type":"string","example":"ohhimark"},"email":{"type":"string","example":"oh@hi.com","description":"Email is not needed as long as there is username"}},"required":["password"]},"AccessTokenResponseDto":{"type":"object","properties":{"accessToken":{"type":"string","description":"The newly generated token.","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiZjIyZDk3M2YtNzgwNC00MWY1LTk5ZDMtYjY5ODJhNmRmOGEyIiwidXNlcm5hbWUiOiJtYXJrIiwiZW1haWwiOiJvaEBoaS5jb20ifSwiaWF0IjoxNjUyNTM2NjI4LCJleHAiOjI1MTY1MzY2Mjh9.Ql9AhreH2sAqm42qTa_s7K3T6W5hqui0ziRj6Z4EhAg"}},"required":["accessToken"]},"ExceptionDto":{"type":"object","properties":{"statusCode":{"type":"number","example":200},"message":{"type":"string","example":"Ok"}},"required":["statusCode","message"]}}}}